{"version":3,"sources":["../../../src/js/world.js"],"names":["World","scene","_scene","background","THREE","Color","buildAmbientLight","geometry","PlaneBufferGeometry","material","MeshLambertMaterial","shadowMat","ShadowMaterial","opacity","floor","Mesh","receiveShadow","rotateX","Math","degToRad","add","textureFile","texture","TextureLoader","load","anisotropy","map","backScene","position","z","color","pointLight","PointLight","copy","castShadow","pointLightHelper","PointLightHelper","light","DirectionalLight","multiplyScalar","shadow","mapSize","width","height","d","camera","left","right","top","bottom","far","AmbientLight"],"mappings":"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","file":"world.js","sourcesContent":["class World {\n\n    constructor(scene){\n        this._scene = scene;\n\n        this._scene.background = new THREE.Color( 0xdddddd );\n\n        //this.buildFloor();\n        //this.buildBackscene('assets/textures/way.jpg');\n\n        this.buildAmbientLight(0xFFFFFF);\n    }\n\n    buildFloor() {\n        const geometry = new THREE.PlaneBufferGeometry(1000, 1000);\n        const material = new THREE.MeshLambertMaterial();\n        const shadowMat = new THREE.ShadowMaterial();\n\n        shadowMat.opacity = 0.2;\n\n        const floor = new THREE.Mesh(geometry, material);\n\n        floor.receiveShadow = true;\n        floor.rotateX(THREE.Math.degToRad(-90));\n\n        this._scene.add(floor);\n    }\n\n    buildBackscene(textureFile) {\n        const texture = new THREE.TextureLoader().load( textureFile );\n        texture.anisotropy = 16;\n        const geometry = new THREE.PlaneBufferGeometry(1000, 1000);\n        const material = new THREE.MeshLambertMaterial({map: texture});\n\n        const backScene = new THREE.Mesh(geometry, material);\n        backScene.receiveShadow = true;\n        backScene.position.z = -100;\n        this._scene.add(backScene);\n    }\n\n    buildPointLight(position, color){\n        const pointLight = new THREE.PointLight(color);\n\n        pointLight.position.copy(position);\n        pointLight.castShadow = true;\n        this._scene.add(pointLight);\n\n        const pointLightHelper = new THREE.PointLightHelper(pointLight, 10);\n        this._scene.add(pointLightHelper);\n\n        return pointLight;\n    }\n\n    buildDirectionalLight(position, color){\n        const light = new THREE.DirectionalLight( color, 1 );\n        light.position.copy(position);\n        light.position.multiplyScalar( 1.3 );\n\n        light.shadow.mapSize.width = 1024;\n        light.shadow.mapSize.height = 1024;\n\n        const d = 300;\n\n        light.shadow.camera.left = - d;\n        light.shadow.camera.right = d;\n        light.shadow.camera.top = d;\n        light.shadow.camera.bottom = - d;\n\n        light.shadow.camera.far = 1000;\n\n        light.castShadow = true;\n        this._scene.add(light);\n        return light;\n    }\n\n    buildAmbientLight(color) {\n        const light = new THREE.AmbientLight( color, 0.6 ); // soft white light\n        this._scene.add( light );\n    }\n}\n\nexport default World;"]}